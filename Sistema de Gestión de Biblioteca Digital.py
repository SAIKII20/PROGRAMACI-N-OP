# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HZg9oBdhVAC9-nadNiZ-XBNVitxfV6LJ
"""

class Libro:
    def __init__(self, titulo, autor, categoria, isbn):
        self.titulo = titulo
        self.autor = autor
        self.categoria = categoria
        self.isbn = isbn

    def __str__(self):
        return f"{self.titulo} por {self.autor} ({self.categoria})"


class Usuario:
    def __init__(self, nombre, id_usuario):
        self.nombre = nombre
        self.id_usuario = id_usuario
        self.libros_prestados = []

    def __str__(self):
        return f"{self.nombre} ({self.id_usuario})"

    def prestar_libro(self, libro):
        self.libros_prestados.append(libro)

    def devolver_libro(self, libro):
        self.libros_prestados.remove(libro)


class Biblioteca:
    def __init__(self):
        self.libros = {}  # Diccionario {ISBN: Libro}
        self.usuarios = {}  # Diccionario {ID Usuario: Usuario}

    def añadir_libro(self, libro):
        self.libros[libro.isbn] = libro

    def registrar_usuario(self, usuario):
        self.usuarios[usuario.id_usuario] = usuario

    def prestar_libro(self, id_usuario, isbn):
        if id_usuario in self.usuarios and isbn in self.libros:
            usuario = self.usuarios[id_usuario]
            libro = self.libros[isbn]
            usuario.prestar_libro(libro)
            print(f"{usuario.nombre} ha prestado el libro: {libro.titulo}")
        else:
            print("Error: Usuario o libro no válido")

    def devolver_libro(self, id_usuario, isbn):
        if id_usuario in self.usuarios:
            usuario = self.usuarios[id_usuario]
            libro = next((l for l in usuario.libros_prestados if l.isbn == isbn), None)
            if libro:
                usuario.devolver_libro(libro)
                print(f"{usuario.nombre} ha devuelto el libro: {libro.titulo}")
            else:
                print("Este libro no fue prestado a este usuario.")
        else:
            print("Error: Usuario no registrado")

    def buscar_libro(self, query):
        return [libro for libro in self.libros.values() if query.lower() in libro.titulo.lower()]


# Ejemplo de uso:

# Crear libros
libro1 = Libro("Cien años de soledad", "Gabriel García Márquez", "Ficción", "12345")
libro2 = Libro("El Quijote", "Miguel de Cervantes", "Clásicos", "67890")

# Crear usuarios
usuario1 = Usuario("Juan Pérez", "U001")
usuario2 = Usuario("Ana López", "U002")

# Crear biblioteca
biblioteca = Biblioteca()

# Añadir libros a la biblioteca
biblioteca.añadir_libro(libro1)
biblioteca.añadir_libro(libro2)

# Registrar usuarios
biblioteca.registrar_usuario(usuario1)
biblioteca.registrar_usuario(usuario2)

# Prestar libros
biblioteca.prestar_libro("U001", "12345")
biblioteca.prestar_libro("U002", "67890")

# Devolver libros
biblioteca.devolver_libro("U001", "12345")

# Buscar libros
resultados = biblioteca.buscar_libro("Ficción")
print("Resultados de búsqueda:", [str(libro) for libro in resultados])