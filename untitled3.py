# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kD7ejHvIz_INU4jyHuZv4UUAuKILZ3_t
"""

import json

# Clase Producto
class Producto:
    def __init__(self, id_producto, nombre, cantidad, precio):
        self.id_producto = id_producto
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def __str__(self):
        return f"ID: {self.id_producto}, Nombre: {self.nombre}, Cantidad: {self.cantidad}, Precio: {self.precio}"

    # Métodos para obtener y establecer atributos
    def get_id(self):
        return self.id_producto

    def set_cantidad(self, cantidad):
        self.cantidad = cantidad

    def set_precio(self, precio):
        self.precio = precio


# Clase Inventario
class Inventario:
    def __init__(self):
        # Usamos un diccionario para almacenar productos por ID
        self.productos = {}

    # Añadir un nuevo producto
    def agregar_producto(self, producto):
        if producto.get_id() not in self.productos:
            self.productos[producto.get_id()] = producto
        else:
            print("Producto con este ID ya existe.")

    # Eliminar producto por ID
    def eliminar_producto(self, id_producto):
        if id_producto in self.productos:
            del self.productos[id_producto]
        else:
            print("Producto no encontrado.")

    # Actualizar cantidad o precio de un producto
    def actualizar_producto(self, id_producto, cantidad=None, precio=None):
        if id_producto in self.productos:
            producto = self.productos[id_producto]
            if cantidad is not None:
                producto.set_cantidad(cantidad)
            if precio is not None:
                producto.set_precio(precio)
        else:
            print("Producto no encontrado.")

    # Buscar y mostrar productos por nombre
    def buscar_producto_por_nombre(self, nombre):
        encontrados = [str(producto) for producto in self.productos.values() if nombre.lower() in producto.nombre.lower()]
        return encontrados if encontrados else "Producto no encontrado."

    # Mostrar todos los productos
    def mostrar_todos_los_productos(self):
        return [str(producto) for producto in self.productos.values()]


# Funciones para leer y escribir el inventario en archivos
def guardar_inventario(inventario, archivo):
    with open(archivo, 'w') as f:
        productos = {id: vars(producto) for id, producto in inventario.productos.items()}
        json.dump(productos, f, indent=4)

def cargar_inventario(archivo):
    inventario = Inventario()
    try:
        with open(archivo, 'r') as f:
            productos = json.load(f)
            for id_producto, producto_data in productos.items():
                producto = Producto(id_producto, producto_data['nombre'], producto_data['cantidad'], producto_data['precio'])
                inventario.agregar_producto(producto)
    except FileNotFoundError:
        print("El archivo no existe.")
    return inventario


# Interfaz de Usuario
def mostrar_menu():
    print("\n1. Agregar producto")
    print("2. Eliminar producto")
    print("3. Actualizar producto")
    print("4. Buscar producto")
    print("5. Mostrar todos los productos")
    print("6. Guardar inventario")
    print("7. Cargar inventario")
    print("8. Salir")


def main():
    inventario = Inventario()
    archivo = 'inventario.json'

    while True:
        mostrar_menu()
        opcion = input("Seleccione una opción: ")

        if opcion == '1':
            id_producto = input("Ingrese ID del producto: ")
            nombre = input("Ingrese nombre del producto: ")
            cantidad = int(input("Ingrese cantidad: "))
            precio = float(input("Ingrese precio: "))
            producto = Producto(id_producto, nombre, cantidad, precio)
            inventario.agregar_producto(producto)
        elif opcion == '2':
            id_producto = input("Ingrese ID del producto a eliminar: ")
            inventario.eliminar_producto(id_producto)
        elif opcion == '3':
            id_producto = input("Ingrese ID del producto a actualizar: ")
            cantidad = input("Ingrese nueva cantidad (deje en blanco para no modificar): ")
            precio = input("Ingrese nuevo precio (deje en blanco para no modificar): ")
            cantidad = int(cantidad) if cantidad else None
            precio = float(precio) if precio else None
            inventario.actualizar_producto(id_producto, cantidad, precio)
        elif opcion == '4':
            nombre = input("Ingrese nombre del producto a buscar: ")
            productos = inventario.buscar_producto_por_nombre(nombre)
            print("\n".join(productos))
        elif opcion == '5':
            productos = inventario.mostrar_todos_los_productos()
            print("\n".join(productos))
        elif opcion == '6':
            guardar_inventario(inventario, archivo)
            print("Inventario guardado.")
        elif opcion == '7':
            inventario = cargar_inventario(archivo)
            print("Inventario cargado.")
        elif opcion == '8':
            print("Saliendo...")
            break
        else:
            print("Opción inválida, intente nuevamente.")


if __name__ == '__main__':
    main()